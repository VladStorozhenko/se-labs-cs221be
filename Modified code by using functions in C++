#include <iostream>
#include <math.h>

using namespace std;

void checkValidInput()
{
	if (cin.fail())
	{
		throw "Invalid data";
	}
}

void checkValidParams(int n)
{
	if (n <= 1)
	{
		throw "Incorrect n";
	}
}

void checkValidRange(double xmin, double xmax)
{
	if (xmin > xmax)
	{
		throw "Incorrect range";
	}
}

void checkValidStep(double step)
{
	if (step <= 0)
	{
		throw "Incorrect step";
	}
}

double calculate(int n, double x)
{
	double y;
	if (x > 0)
	{
		y = 1;
		for (int i = 1; i <= n; i++)
		{
			y *= ((i - x) / (x * i));
		}
	}
	else
	{
		y = 0;
		for (int i = 0; i <= n - 1; i++)
		{
			for (int j = 0; j <= n - 1; j++)
			{
				if (x - i + j == 0) {
					continue;
				}
				y += (1 / (x - i + j));
			}
		}
	}
	return y;
}

void printOnRange(double xmin, double xmax, double step, int n)
{
	for (double x = xmin; x <= xmax; x += step)
	{
		cout << "x= " << x << "\ny= " << calculate(n, x) << endl;
	}
}

int main()
{
	int n;
	double xmax, xmin, step;
	try
	{
		cout << "Input n>1, n= ";
		cin >> n;
		checkValidInput();
		checkValidParams(n);
		cout << "Input x min = ";
		cin >> xmin;
		checkValidInput();
		cout << "Input x max = ";
		cin >> xmax;
		checkValidInput();
		checkValidRange(xmin, xmax);
		cout << "Input step = ";
		cin >> step;
		checkValidInput();
		checkValidStep(step);
		printOnRange( xmin,  xmax,  step, n);
	}
	catch(const char* exception)
	{
		cout << exception << endl;
		return -1;
	}
	catch (...)
	{
		cout << "Unknown error" << endl;
		return -2;
	}

	system("pause");
	return 0;
}
